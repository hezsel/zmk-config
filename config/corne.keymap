/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            hold-trigger-key-positions = <12 13 14 15 16 17 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
            flavor = "tap-preferred";
        };

        hold_to_layer: hold_to_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TO_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE        &kp Q                     &kp W                 &kp E                     &kp R                   &kp T        &kp Y       &kp U                       &kp I                      &kp O                 &kp P     &kp TAB
&kp LEFT_SHIFT    &hold_tap LEFT_COMMAND A  &hold_tap LEFT_ALT S  &hold_tap LEFT_CONTROL D  &hold_tap LEFT_SHIFT F  &kp G        &kp H       &hold_tap LEFT_SHIFT J      &hold_tap LEFT_CONTROL K   &hold_tap LEFT_ALT L  &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z                     &kp X                 &kp C                     &kp V                   &kp B        &kp N       &hold_to_layer 2 M          &kp COMMA                  &kp DOT               &kp FSLH  &hold_to_layer 3 DOUBLE_QUOTES
                                                                  &hold_to_layer 6 LEFT     &hold_to_layer 1 SPACE  &kp ENTER    &kp ESCAPE  &hold_to_layer 1 BACKSPACE  &hold_to_layer 4 UP_ARROW
            >;
        };

        default_layer_mac {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE        &kp Q                     &kp W                 &kp E                     &kp R                   &kp T        &kp Y       &kp U                       &kp I                      &kp O                 &kp P     &kp TAB
&kp LEFT_SHIFT    &hold_tap LEFT_COMMAND A  &hold_tap LEFT_ALT S  &hold_tap LEFT_CONTROL D  &hold_tap LEFT_SHIFT F  &kp G        &kp H       &hold_tap LEFT_SHIFT J      &hold_tap LEFT_CONTROL K   &hold_tap LEFT_ALT L  &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z                     &kp X                 &kp C                     &kp V                   &kp B        &kp N       &hold_to_layer 2 M          &kp COMMA                  &kp DOT               &kp FSLH  &hold_to_layer 3 DOUBLE_QUOTES
                                                                  &hold_to_layer 6 LEFT     &hold_to_layer 1 SPACE  &kp ENTER    &kp ESCAPE  &hold_to_layer 1 BACKSPACE  &hold_to_layer 4 UP_ARROW
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE     &kp PRINTSCREEN  &kp N7        &kp N8        &kp N9        &kp ASTRK  &kp SLASH
&kp TILDE  &kp HASH         &kp DOLLAR     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE    &kp EQUAL        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &kp PLUS
&kp CARET  &kp PERCENT      &kp AMPERSAND  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE    &kp NUMBER_0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT    &kp COMMA
                                           &trans                &trans                 &trans       &trans           &trans        &trans
            >;
        };

        functions {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5    &kp F6    &kp F7     &kp F8     &kp F9    &kp F10   &kp F11   &kp F12
&trans  &trans  &trans  &kp END  &kp HOME  &trans    &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&to 5   &trans  &trans  &trans   &trans    &trans    &kp UNDER  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                        &trans   &trans    &trans    &trans     &trans     &trans
            >;
        };

        bt-switch {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &bt BT_CLR    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_SEL 3  &bt BT_SEL 4  &trans        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans        &trans
            >;
        };

        movement {
            bindings = <
&trans  &trans  &trans          &kp UP_ARROW    &trans           &trans    &trans    &trans          &trans        &trans     &trans  &trans
&trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans    &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &trans          &trans          &trans           &trans    &trans    &trans          &trans        &trans     &trans  &trans
                                &trans          &trans           &trans    &trans    &trans          &trans
            >;
        };

        games {
            bindings = <
&kp F1  &kp ESC    &kp Q  &kp W    &kp E                        &kp R        &kp T      &kp Y      &kp U  &kp I      &kp O    &kp P
&kp F2  &kp LSHFT  &kp A  &kp S    &kp D                        &kp F        &kp G      &kp H      &kp J  &kp K      &kp L    &kp SEMI
&kp F3  &kp LCTRL  &kp Z  &kp X    &kp C                        &kp V        &kp B      &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH
                          &kp TAB  &hold_to_layer 6 LEFT_SHIFT  &kp SPACE    &kp SPACE  &kp SPACE  &to 0
            >;
        };

        left_numbers {
            bindings = <
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N0  &kp N1  &kp N2  &kp N3  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
